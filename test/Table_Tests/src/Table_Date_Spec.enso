from Standard.Base import all
import Standard.Base.Data.Time.Date

import Standard.Table
import Standard.Table.Io.File_Format
import Standard.Test

import project.Util

spec =
    c_number = ["Number", [71, 72, 73, 74, 75, 76, 77]]
    c_party = ["Party", ["Conservative", "Conservative", "Labour", "Labour", "Conservative", "Conservative", "Conservative"]]
    c_name = ["Title", ["Margaret Thatcher", "John Major", "Tony Blair", "Gordon Brown", "David Cameron", "Theresa May", "Boris Johnson"]]
    c_from = ["From", [Date.new 1979 05 04, Date.new 1990 11 28, Date.new 1997 05 02, Date.new 2007 06 27, Date.new 2010 05 11, Date.new 2016 07 13, Date.new 2019 07 24]]
    c_to = ["To", [Date.new 1990-11-28, Date.new 1997-05-02, Date.new 2007-06-27, Date.new 2010-05-11, Date.new 2016-07-13, Date.new 2019-07-24, Date.new 2022-07-07]]
    expected = Table.new [c_number, c_party, c_name, c_from, c_to]

    Test.group "Table can be created with dates" <|

    Test.group "File.read (Delimited) should work with Dates" <|
        table = (Enso_Project.data / "prime_ministers.csv").read
        Test.specify "should be able to read in a table with dates" <|
            table.columns.length.should_equal 5
            table.columns.map (.name) . should_equal ['Number','Party', 'Title', 'From', 'To']
            table.row_count.should_equal 7

        Test.specify "should be able to get the year of the dates" <|
            from_column = table.at 'From'
            from_column.at 6 . year . should_equal 2019
            from_column.at 6 . should_equal (Date.new 2019 7 24)

main = Test.Suite.run_main here.spec
