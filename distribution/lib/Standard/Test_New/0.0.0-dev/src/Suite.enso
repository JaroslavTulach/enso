
from Standard.Base import all
import Standard.Base.Runtime.State
import project.Group.Group
import project.Group.Group_Builder
import project.Phases.Running_Tests

type Suite_Builder
    ## PRIVATE
    Impl builder

    ## Add a group to the builder.
    group : Text -> (Group_Builder -> Any) -> Nothing
    group self (name:Text) fn =
        b = Vector.new_builder
        fn (Group_Builder.Impl b)
        self.builder.append <| Group.Impl name b.to_vector


type Suite
    Impl (groups : Vector Group)

    ## Merges multiple suites into one suite
    merge : (Vector Suite) -> Suite
    merge suites =
        all_groups = suites.map (_.groups) . flatten
        all_group_names = all_groups.map (_.name)
        if all_group_names.distinct.length != all_group_names.length then Panic.throw "Group names not unique" else
            Suite.Impl all_groups

    run_all self =
        State.run Running_Tests True <|
            self.groups.each group->
                group.run

    group_names self =
        self.groups.map (_.name)
