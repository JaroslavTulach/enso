private

from Standard.Base import all
import project.Spec.Spec
polyglot java import java.lang.StringBuilder

type Group_Builder
    ## PRIVATE
    Impl builder

    ## Specifies a single test.

       Arguments:
       - code: A thunk that takes no arguments.
       - pending: Contains a reason for why the test should be ignored. If Nothing, the test
                  is not ignored.
    specify self (name : Text) (~code : Any) (pending : (Text | Nothing) = Nothing) =
        self.builder.append <| Spec.Impl name (_ -> code) pending

    ## Specifies a single test that takes arguments from Group.setup

       Arguments:
       - code: Spec function that takes arguments provided by Group.setup method.
    specify_with_args self (name : Text) (code : (Any -> Any)) (pending : (Text | Nothing) = Nothing) =
        self.builder.append <| Spec.Impl name code pending


type Group
    Impl (name : Text) (setup : (Nothing -> Any)) (teardown : (Any -> Nothing)) (specs : Vector Spec)

    to_text self =
        sb = StringBuilder.new
        sb.append ("Group '" + self.name + "' specs=[")
        self.specs.each spec->
            sb.append (spec.to_text + ", ")
        sb.append "]"
        sb.toString

